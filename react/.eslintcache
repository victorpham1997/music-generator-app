[{"/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/index.js":"1","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/reportWebVitals.js":"2","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/App.js":"3","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/Player.js":"4","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/Recorder.js":"5","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/Model.js":"6","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/components/Instructions.js":"7","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/components/Playbar.js":"8","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/public/data.js":"9"},{"size":769,"mtime":1609503875415,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609503875415,"results":"12","hashOfConfig":"11"},{"size":11085,"mtime":1609701971275,"results":"13","hashOfConfig":"11"},{"size":3047,"mtime":1609503875415,"results":"14","hashOfConfig":"11"},{"size":3788,"mtime":1609698034783,"results":"15","hashOfConfig":"11"},{"size":3862,"mtime":1609503875415,"results":"16","hashOfConfig":"11"},{"size":4398,"mtime":1609513577495,"results":"17","hashOfConfig":"11"},{"size":3018,"mtime":1609702260654,"results":"18","hashOfConfig":"11"},{"size":1714,"mtime":1609675615653,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ibi4ts",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/index.js",[],["41","42"],"/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/reportWebVitals.js",[],"/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/App.js",["43","44","45","46","47","48","49","50","51","52","53"],"/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/Player.js",[],"/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/Recorder.js",[],"/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/Model.js",["54","55","56","57","58"],"import { Midi } from '@tonejs/midi';\nimport axios from 'axios';\nimport fileDownload from 'js-file-download'\n\nconst server = 'http://localhost:5000'\n\nexport default class Model {\n\n    constructor() {\n        this.lastTokenSequence = []\n        this.fullTokenSequence = []\n    }\n\n    async userInputToMidi(userInput) {\n        let token_sequence = await this.userCombiToTokenSequence(userInput);\n        this.lastTokenSequence = token_sequence;\n        this.fullTokenSequence = token_sequence;\n        let userInputMidi = await this.tokenSequenceToMidi(token_sequence);        \n        return userInputMidi;\n    }\n\n    async generateNext() {\n        let sliceOffsetCount = this.fullTokenSequence.length; //the slice count before it was generated\n        let generatedTokenSequence = await this.generateNextTokenSequence();\n        let generatedMidi = await this.tokenSequenceToMidi(generatedTokenSequence);\n        return {\n            midi: generatedMidi,\n            tokens: generatedTokenSequence,\n            slicesBeforeGenerated: sliceOffsetCount\n        };\n    }\n\n    async generateNextTokenSequence() {\n        if(this.lastTokenSequence.length == 0) {\n            console.error('Last token sequence missing. Please record first')\n        }\n\n        let window = 300\n        let refTokenSequence = this.fullTokenSequence.length >= window ? this.fullTokenSequence.slice(this.fullTokenSequence.length-window) : this.fullTokenSequence; //if the full length is too short, just send the short one and let server side pad\n        let generatedTokenSequence = await this.generateTokenSequenceFromTokenSequence(refTokenSequence)\n        this.fullTokenSequence = [...this.fullTokenSequence, ...generatedTokenSequence]; //append token sequence\n        this.lastTokenSequence = generatedTokenSequence;\n        return generatedTokenSequence;\n    }\n    \n    async userCombiToTokenSequence(user_combi) {\n        // let url = server + '/generate_from_user_input'\n        let response = await axios({            \n            url: server + '/user_combi_to_token_sequence',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            responseType: 'json',\n            data: { user_combi }\n        })\n        \n        if(response.status == 200 && response.data) {\n            let token_sequence = response.data\n            return token_sequence\n        }\n\n        console.error('userCombiToTokenSequence: invalid response from server');\n        return null;\n    }\n    \n    async tokenSequenceToMidi(token_sequence) {\n        let response = await axios({            \n            url: server + '/token_sequence_to_midi',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            responseType: 'arraybuffer',\n            data: { token_sequence }\n        })\n\n        if(response.status == 200 && response.data) {\n            let midiFile = new Midi(response.data)\n            this.lastMidiChunk = midiFile;\n            return midiFile;\n        }\n\n        console.error('tokenSequenceToMidi: invalid response from server');\n        return null;\n    }\n\n    async generateTokenSequenceFromTokenSequence(last_token_sequence) {\n        \n        let response = await axios({            \n            url: server + '/generate_next_token_sequence',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            responseType: 'json',\n            data: { token_sequence: last_token_sequence }\n        })\n\n        if(response.status == 200 && response.data) {\n            let token_sequence = response.data;\n            return token_sequence;\n        }\n\n        console.error('tokenSequenceToGeneratedTokenSequence: invalid response from server');\n        return null;\n    }\n\n    reset() {\n        this.lastTokenSequence = []\n        this.fullTokenSequence = []\n    }\n}","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/components/Instructions.js",["59","60","61"],"import Modal from '@material-ui/core/Modal';\nimport Info from '@material-ui/icons/Info';\nimport { useEffect, useState } from 'react'\nimport '../App.css';\nimport { Button, Icon, IconButton } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n//Jazz Generation \n\n// Instructions: \n// (1) Familiarise yourself with the Chords and Notes are the bottom, you can either click on them or press the keys (highlighted in orange) on your keyboard \n\n// (2) Press the becord button (Red Circle)\n\n// (3) Immediately enter the chords/notes of your choice. Quick you only have 2s!\n\n// (4) Wait for generated music to load onto the screen\n\n// (5) Press the play button (Triangle)\n\n// (6) Enjoy! \n\n// (7) Before starting a new recording, please prease the stop button (Square) \n\n// (8) You can also pause a song by pressing the pause button ( 2 rectangular blocks)\n\n// (9) You can also press the rewind button (loop) to listen back to our collective creation\n\nexport default function Instruction(){\n\n    const StyledButton = withStyles({\n        root: {\n          background: '#fff',\n          borderRadius: \"60px\",\n          border: 0,\n          color: '#000',\n          height: \"100%\",\n          padding: '2vw',\n          fontWeight:\"700\",\n          fontSize:\"1.75vw\",\n          fontFamily:\"Helvetica Neue\",\n          '&:hover': {\n            background: \"#7Ec291\",\n            color:\"#fff\"\n        }\n        },\n        label: {\n          textTransform: 'uppercase',\n        },\n    })(Button);\n    //Modal Related\n\tconst [open, setOpen] = useState(false); \n    const handleOpenModal = () => {\n      setOpen(true);\n    };\n    const handleCloseModal = () => {\n      setOpen(false);\n    };\n\n    function Body(){\n        return(\n            <div style={{width:\"50%\", backgroundColor:\"white\",borderRadius:\"30px\",padding:\"2vw 2vw\", wordWrap:\"break-word\"}}>\n                <div style={{textAlign:\"center\",fontWeight:\"700\",fontSize:\"3vw\"}}>Jazz Generation</div>\n                <br></br>\n                <div className=\"modal-instructions\">\n                    <div className=\"modal-instructions-text bold\">Instructions:</div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(1) Familiarise yourself with the Chords and Notes are the bottom, you can either click on them or press the keys (highlighted in orange) on your keyboard </div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(2) Press the becord button (Red Circle)</div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(3) Immediately enter the chords/notes of your choice. Quick you only have 2s!</div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(4) Wait for generated music to load onto the screen</div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(5) Press the play button (Triangle)</div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(6) Enjoy!</div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(7) Before starting a new recording, please prease the stop button (Square) </div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(8) You can also pause a song by pressing the pause button ( 2 rectangular blocks)</div>\n                    <br></br>\n                    <div className=\"modal-instructions-text\">(9) You can also press the rewind button (Double Triangle) to listen back to our collective creation</div>\n                    <br></br>\n                    \n                </div>\n            </div>\n        )\n    }\n\n    return(\n        <div style={{width:\"20%\"}}>\n            <IconButton type=\"button\" onClick={handleOpenModal} className=\"instruction-button\">\n                <Info style={{width: '5vw', height: '5vw', fill: '#0C1115'}}/>\n            </IconButton>\n            <Modal\n                  open={open}\n                  onClose={handleCloseModal}\n                  aria-labelledby=\"simple-modal-title\"\n                  aria-describedby=\"simple-modal-description\"\n                  style={{display:'flex',alignItems:'center',justifyContent:'center'}}\n                >\n                    <Body></Body>\n            </Modal>\n        </div>\n    )\n}","/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/components/Playbar.js",["62","63"],"/home/victorpham1997/Workplace/SUTD/50038_computational_data_science/project/music-generator-app/react/src/public/data.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":11,"column":28,"nodeType":"70","messageId":"71","endLine":11,"endColumn":34},{"ruleId":"68","severity":1,"message":"72","line":11,"column":36,"nodeType":"70","messageId":"71","endLine":11,"endColumn":45},{"ruleId":"68","severity":1,"message":"73","line":20,"column":9,"nodeType":"70","messageId":"71","endLine":20,"endColumn":21},{"ruleId":"68","severity":1,"message":"74","line":24,"column":19,"nodeType":"70","messageId":"71","endLine":24,"endColumn":30},{"ruleId":"68","severity":1,"message":"75","line":25,"column":16,"nodeType":"70","messageId":"71","endLine":25,"endColumn":24},{"ruleId":"76","severity":1,"message":"77","line":118,"column":5,"nodeType":"78","endLine":118,"endColumn":7,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":124,"column":13,"nodeType":"82","messageId":"83","endLine":124,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":135,"column":13,"nodeType":"82","messageId":"83","endLine":135,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":163,"column":17,"nodeType":"82","messageId":"83","endLine":163,"endColumn":19},{"ruleId":"80","severity":1,"message":"84","line":164,"column":24,"nodeType":"82","messageId":"83","endLine":164,"endColumn":26},{"ruleId":"80","severity":1,"message":"84","line":171,"column":30,"nodeType":"82","messageId":"83","endLine":171,"endColumn":32},{"ruleId":"68","severity":1,"message":"85","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":20},{"ruleId":"80","severity":1,"message":"84","line":34,"column":42,"nodeType":"82","messageId":"83","endLine":34,"endColumn":44},{"ruleId":"80","severity":1,"message":"84","line":56,"column":28,"nodeType":"82","messageId":"83","endLine":56,"endColumn":30},{"ruleId":"80","severity":1,"message":"84","line":74,"column":28,"nodeType":"82","messageId":"83","endLine":74,"endColumn":30},{"ruleId":"80","severity":1,"message":"84","line":94,"column":28,"nodeType":"82","messageId":"83","endLine":94,"endColumn":30},{"ruleId":"68","severity":1,"message":"86","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":19},{"ruleId":"68","severity":1,"message":"87","line":5,"column":18,"nodeType":"70","messageId":"71","endLine":5,"endColumn":22},{"ruleId":"68","severity":1,"message":"88","line":30,"column":11,"nodeType":"70","messageId":"71","endLine":30,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":16},{"ruleId":"68","severity":1,"message":"87","line":1,"column":18,"nodeType":"70","messageId":"71","endLine":1,"endColumn":22},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'withTheme' is defined but never used.","'isGenerating' is assigned a value but never used.","'setRecorder' is assigned a value but never used.","'setModel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SampleChords', 'model', 'player', 'playerTwo', and 'recorder'. Either include them or remove the dependency array. You can also do a functional update 'setPlayer(p => ...)' if you only need 'player' in the 'setPlayer' call.","ArrayExpression",["91"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'fileDownload' is defined but never used.","'useEffect' is defined but never used.","'Icon' is defined but never used.","'StyledButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [SampleChords, model, player, playerTwo, recorder]",{"range":"94","text":"95"},[3827,3829],"[SampleChords, model, player, playerTwo, recorder]"]